name: Full Release But Without Linux

on:
  workflow_dispatch:

env:
  PROJECT_NAME: MintRhythmExtended
  REPO_PATH: kittycathy233/FNF-MintRhythm-Engine
  HAXE_VERSION: 4.3.7

jobs:
  get-commit-hash:
    runs-on: ubuntu-latest
    outputs:
      commit_hash: ${{ steps.get_commit_hash.outputs.commit_hash }}
    steps:
      - name: Check Repository
        run: |
          echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
          echo "REPO_PATH: ${{ env.REPO_PATH }}"
          if [[ "$GITHUB_REPOSITORY" != "${{ env.REPO_PATH }}" ]]; then
            echo "Doesn't seem to be correct, returning SIGABRT..."
            exit 6
          else
            echo "Seems to be correct..."
          fi

      - name: Get latest commit hash
        id: get_commit_hash
        run: |
          if [ -n "$GITHUB_SHA" ]; then
            commit_hash="${GITHUB_SHA::7}"
          else
            commit_hash=$(git rev-parse --short HEAD)
          fi
          echo "commit_hash=$commit_hash" >> $GITHUB_OUTPUT
          echo "Latest commit hash: $commit_hash"
          if [[ -z "$commit_hash" || ! "$commit_hash" =~ ^[a-f0-9]{7}$ ]]; then
            echo "Invalid commit_hash: $commit_hash"
            exit 1
          fi

  build:
    name: Build All Platforms
    needs: get-commit-hash
    strategy:
      matrix:
        include:
          - name: Windows
            os: windows-2022
            buildArgs: "windows -final -D officialBuild"
            setupCommand: .\setup\windows.bat
            artifactName: windowsBuild-x86_64
            artifactPath: export\release\windows\bin\*
          - name: macOS x86_64
            os: macos-13
            setupCommand: sh ./setup/unix.sh
            buildArgs: "mac -64 -D HXCPP_M64 -final -D officialBuild"
            artifactName: macOSBuild-x86_64
            artifactPath: export/release/macos/bin/*
          - name: macOS ARM64
            os: macos-13
            setupCommand: sh ./setup/unix.sh
            buildArgs: "mac -arm64 -D HXCPP_ARM64 -final -D officialBuild"
            artifactName: macOSBuild-arm64
            artifactPath: export/release/macos/bin/*
          - name: Android
            os: macos-14
            buildArgs: "android -final -D officialBuild"
            setupCommand: sh ./setup/unix.sh
            artifactName: androidBuild
            artifactPath: "export/release/android/bin/app/build/outputs/apk/release/*.apk"
          - name: iOS
            os: macos-13
            buildArgs: "ios -final -nosign -D officialBuild"
            setupCommand: sh ./setup/unix.sh
            artifactName: iOSBuild
            artifactPath: "export/release/ios/build/Release-iphoneos/*.ipa"
    uses: ./.github/workflows/build.yml
    with:
      name: ${{ matrix.name }}
      os: ${{ matrix.os }}
      setupCommand: ${{ matrix.setupCommand }}
      buildArgs: ${{ matrix.buildArgs }}
      artifactName: ${{ matrix.artifactName }}
      artifactPath: ${{ matrix.artifactPath }}

  release:
    name: Publish Release
    needs: [build, get-commit-hash]
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Download Windows Build
        uses: actions/download-artifact@v4
        with:
          name: windowsBuild-x86_64
          path: builds/windows

      - name: Download macOS x86_64 Build
        uses: actions/download-artifact@v4
        with:
          name: macOSBuild-x86_64
          path: builds/macos-x64

      - name: Download macOS ARM64 Build
        uses: actions/download-artifact@v4
        with:
          name: macOSBuild-arm64
          path: builds/macos-arm64

      - name: Download Android Build
        uses: actions/download-artifact@v4
        with:
          name: androidBuild
          path: builds/android

      - name: Download iOS Build
        uses: actions/download-artifact@v4
        with:
          name: iOSBuild
          path: builds/ios

      - name: Compress Builds
        run: |
          sudo apt-get install p7zip-full
          cd builds/windows && 7z a -tzip ../../${{ env.PROJECT_NAME }}-windows.zip ./* && cd ../..
          cd builds/macos-x64 && 7z a -tzip ../../${{ env.PROJECT_NAME }}-macos-x64.zip ./* && cd ../..
          cd builds/macos-arm64 && 7z a -tzip ../../${{ env.PROJECT_NAME }}-macos-arm64.zip ./* && cd ../..
          cp builds/android/*.apk ./${{ env.PROJECT_NAME }}-android.apk
          cp builds/ios/*.ipa ./${{ env.PROJECT_NAME }}-ios.ipa

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: "Release ${{ needs.get-commit-hash.outputs.commit_hash }}"
          tag_name: "release-${{ needs.get-commit-hash.outputs.commit_hash }}"
          prerelease: false
          files: |
            ${{ env.PROJECT_NAME }}-windows.zip
            ${{ env.PROJECT_NAME }}-macos-x64.zip
            ${{ env.PROJECT_NAME }}-macos-arm64.zip
            ${{ env.PROJECT_NAME }}-android.apk
            ${{ env.PROJECT_NAME }}-ios.ipa